 .custompopup
        {
            background-color: #fff;
            border: 3px solid #fff;
            display: inline-block;
            left: 50%;
            padding: 15px;
            position: fixed;
            text-align: justify;
            top: 40%;
            z-index: 10;
            -webkit-transform: translate(-50%, -50%);
            -moz-transform: translate(-50%, -50%);
            -ms-transform: translate(-50%, -50%);
            -o-transform: translate(-50%, -50%);
            -webkit-border-radius: 10px;
            -moz-border-radius: 10px;
            -ms-border-radius: 10px;
            -o-border-radius: 10px;
            -webkit-box-shadow: 0 1px 1px 2px rgba(0, 0, 0, 0.4) inset;
            -moz-box-shadow: 0 1px 1px 2px rgba(0, 0, 0, 0.4) inset;
            -ms-box-shadow: 0 1px 1px 2px rgba(0, 0, 0, 0.4) inset;
            -o-box-shadow: 0 1px 1px 2px rgba(0, 0, 0, 0.4) inset;
            -webkit-transition: opacity .5s, top .5s;
            -moz-transition: opacity .5s, top .5s;
            -ms-transition: opacity .5s, top .5s;
            -o-transition: opacity .5s, top .5s;
        }

        .custompopup p, .custompopup div
        {
            margin-bottom: 10px;
        }
        .custompopup label
        {
            display: inline-block;
            text-align: left;
            width: 120px;
        }
        .custompopup input[type="text"], .custompopup input[type="password"]
        {
            border: 1px solid;
            border-color: #999 #ccc #ccc;
            margin: 0;
            padding: 2px;
            -webkit-border-radius: 2px;
            -moz-border-radius: 2px;
            -ms-border-radius: 2px;
            -o-border-radius: 2px;
            border-radius: 2px;
        }
        .custompopup input[type="text"]:hover, .custompopup input[type="password"]:hover
        {
            border-color: #555 #888 #888;
        }
        
        
        /*pop up content*/

   /*newly added items start faded out and translated 400px upwards on the y-axis*/
li.new-item {
  opacity: 0;
  animation: new-item-animation .3s linear forwards;
}
 
@keyframes new-item-animation {
  from {
    opacity: 0;
    transform: translateY(-400px);
  }
 
  to {
    opacity: 1;
    transform : translateY(0);
  }

li.removed-item {
  animation: removed-item-animation 1s cubic-bezier(0.55, -0.04, 0.91, 0.94) forwards;
  /*transform origin is moved to the bottom left corner*/
  transform-origin: 0% 100%;
}
 
@keyframes removed-item-animation {
  0% {
    opacity: 1;
    transform: rotateZ(0);
  }
 
  100% {
    opacity: 0;
    transform: translateY(600px) rotateZ(90deg);
  }
}

/*the initial state in this animation is same as the final state of the above one*/
li.restored-item {
  animation: 
    openspace 0.3s ease forwards, 
    restored-item-animation 0.3s 0.3s cubic-bezier(0, 0.8, 0.32, 1.07) forwards;
}
/*
  Snippet @keyframe openspace source: http://css-tricks.com/transitional-interfaces-coded/
*/
@keyframes openspace {
  to {
    height: auto;
  }
}
 
@keyframes restored-item-animation {
  0% {
    opacity: 0;
    transform: translateY(600px) rotateZ(90deg);
  }
 
  10% {
    opacity: 1;
    transform: translateY(600px) rotateZ(90deg);
  }
 
  100% {
    opacity: 1;
    transform: rotateZ(0);
  }
}